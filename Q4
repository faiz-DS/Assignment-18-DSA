def maximum_gap(nums):
    if len(nums) < 2:
        return 0

    def radix_sort(nums):
        max_element = max(nums)
        exp = 1
        while max_element // exp > 0:
            counting_sort(nums, exp)
            exp *= 10

    def counting_sort(nums, exp):
        n = len(nums)
        output = [0] * n
        count = [0] * 10

        for num in nums:
            index = (num // exp) % 10
            count[index] += 1

        for i in range(1, 10):
            count[i] += count[i - 1]

        i = n - 1
        while i >= 0:
            index = (nums[i] // exp) % 10
            output[count[index] - 1] = nums[i]
            count[index] -= 1
            i -= 1

        for i in range(n):
            nums[i] = output[i]

    radix_sort(nums)

    max_gap = 0
    for i in range(1, len(nums)):
        max_gap = max(max_gap, nums[i] - nums[i - 1])

    return max_gap

# Example 1
nums1 = [3, 6, 9, 1]
print(maximum_gap(nums1))  # Output: 3

# Example 2
nums2 = [10]
print(maximum_gap(nums2))  # Output: 0
